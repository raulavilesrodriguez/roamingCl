quarto::quarto_preview()
quarto::quarto_render()
quarto::quarto_preview()
quarto::quarto_render()
quarto::quarto_preview()
quarto::quarto_preview()
quarto::quarto_render()
quarto render
quarto::quarto_render()
quarto::quarto_render()
quarto::quarto_render()
quarto::quarto_preview()
quarto::quarto_render()
quarto::quarto_preview()
quarto::quarto_preview()
quarto::quarto_preview()
quarto::quarto_render()
quarto::quarto_render()
library(readxl)
usuarios.claro <- read_excel("./data/usuarios_claro.xls")
library(readxl)
usuarios.claro <- read_excel("./data/usuarios_claro.xls")
library(readxl)
usuarios.claro <- read_excel("usuarios_claro.xls")
library(readxl)
usuarios.claro <- read_excel("usuarios_claro.xlsx")
library(readxl)
usuarios.claro <- read_excel("./data/usuarios_claro.xlsx")
source("C:/Users/bravi/projects/webRoamingChile/roaming/codigo.R", echo=TRUE)
View(usuarios.claro)
class(usuarios.claro$fecha)
source("C:/Users/bravi/projects/webRoamingChile/roaming/codigo.R", echo=TRUE)
quarto::quarto_preview()
source("C:/Users/bravi/projects/webRoamingChile/roaming/codigo.R", echo=TRUE)
n <- nrow(usuarios.claro)
source("C:/Users/bravi/projects/webRoamingChile/roaming/codigo.R", echo=TRUE)
usuarios.claro[['usuarios_outbound']][1]
source("C:/Users/bravi/projects/webRoamingChile/roaming/codigo.R", echo=TRUE)
source("C:/Users/bravi/projects/webRoamingChile/roaming/codigo.R", echo=TRUE)
source("C:/Users/bravi/projects/webRoamingChile/roaming/codigo.R", echo=TRUE)
View(usuarios.movi)
mean(usuarios.movi$usuarios)
source("C:/Users/bravi/projects/webRoamingChile/roaming/codigo.R", echo=TRUE)
source("C:/Users/bravi/projects/webRoamingChile/roaming/codigo.R", echo=TRUE)
source("C:/Users/bravi/projects/webRoamingChile/roaming/codigo.R", echo=TRUE)
quarto::quarto_preview()
suppressPackageStartupMessages({
library(readxl)
library(tidyverse)
library(highcharter) #Interactive Plot
})
usuarios.movi <- read_excel("./data/usuarios_movi.xlsx")
avMovi.outbound <- mean(usuarios.movi$usuarios)
n <- nrow(usuarios.movi)
variation.movi.outbound <- ((usuarios.movi[['usuarios']][n] / usuarios.movi[['usuarios']][1]) - 1)*100
usuarios.movi$Fecha <- as.Date(usuarios.movi$Fecha)
hchart(usuarios.movi, "line", hcaes(x = Fecha, y = usuarios)) |>
hc_title(text="<b>Usuarios Movistar Roaming Chile-Ecuador</b>") |>
hc_subtitle(text = 'Country: Ecuador') |>
hc_credits(enable = TRUE, text = 'https://github.com/raulavilesrodriguez') |>
hc_tooltip(sort = TRUE, table = TRUE) |>
hc_caption(text = 'Elaborated: Byron Raúl Avilés Rodríguez') |>
hc_add_theme(hc_theme_darkunica())
quarto::quarto_preview()
quarto::quarto_preview()
quarto::quarto_preview()
quarto::quarto_render()
quarto::quarto_render()
iot.claro.inbound <- read_excel("./data/iot_claro_inbound.xlsx")
iot.claro.inbound
View(iot.claro.inbound)
trafico.claro <- read_excel("./data/trafico_claro")
trafico.claro <- read_excel("./data/trafico_claro.xlsx")
source("C:/Users/bravi/projects/webRoamingChile/roaming/codigo.R", echo=TRUE)
View(voz.claro)
View(voz.claro)
View(usuarios.claro)
trafico.claro <- read_excel("./data/trafico_claro.xlsx")
voz.claro <- trafico.claro |> select(fecha, `VOZ TOTAL TRAFICO Outbound`, `VOZ TOTAL TRAFICO Inbound`)
View(trafico.claro)
#---TRÁFICO---
trafico.claro <- read_excel("./data/trafico_claro.xlsx")
voz.claro <- trafico.claro |> select(Fecha, `VOZ TOTAL TRAFICO Outbound`, `VOZ TOTAL TRAFICO Inbound`)
quarto::quarto_render()
quarto::quarto_render()
iot.movi <- read_excel("./data/iot_movi.xlsx")
iot.movi
View(iot.movi)
iot.movi <- iot.movi[,-5]
quarto::quarto_render()
quarto::quarto_render()
quarto::quarto_preview()
source("C:/Users/bravi/projects/webRoamingChile/roaming/codigo.R", echo=TRUE)
View(minoristas)
minoristas <- minoristas |> mutate(Claro = round(Claro, 3))
minoristas <- minoristas |> mutate(Claro = round(Claro, 4), Movistar = round(Movistar, 4))
minoristas2 <- pivot_longer(minoristas, cols=2:4, names_to = 'operadora', values_to = 'tarifas')
View(minoristas2)
hchart(minoristas2, "column", hcaes(servicio, tarifas, group = operadora))
hchart(minoristas2, "column", hcaes(SERVICIO, tarifas, group = operadora))
minoristas2[['tarifas']][11]
minoristas2[['tarifas']][11] + minoristas2[['tarifas']][12]
minoristas <- read_excel("./data/tarifas_minoristas.xlsx")
minoristas <- minoristas |> mutate(Claro = round(Claro, 5), Movistar = round(Movistar, 5))
minoristas2 <- pivot_longer(minoristas, cols=2:4, names_to = 'operadora', values_to = 'tarifas')
hchart(minoristas2, "column", hcaes(SERVICIO, tarifas, group = operadora))
minoristas2.datos <- minoristas2 |> filter(SERVICIO == 'DATOS (USD/MB)')
View(minoristas2.datos)
hchart(minoristas2.datos, "column", hcaes(SERVICIO, tarifas, group = operadora))
hchart(minoristas2.datos, "column", hcaes(SERVICIO, tarifas, group = operadora)) |>
hc_credits(enable = TRUE, text = 'https://github.com/raulavilesrodriguez') |>
hc_tooltip(sort = TRUE, table = TRUE) |>
hc_caption(text = 'Elaborated: Byron Raúl Avilés Rodríguez') |>
hc_add_theme(hc_theme_economist())
hchart(minoristas2.datos, "column", hcaes(SERVICIO, tarifas, group = operadora)) |>
hc_credits(enable = TRUE, text = 'https://github.com/raulavilesrodriguez') |>
hc_tooltip(sort = TRUE, table = TRUE) |>
hc_caption(text = 'Elaborated: Byron Raúl Avilés Rodríguez') |>
hc_add_theme(hc_theme_db())
hchart(minoristas2, "column", hcaes(SERVICIO, tarifas, group = operadora)) |>
hc_credits(enable = TRUE, text = 'https://github.com/raulavilesrodriguez') |>
hc_tooltip(sort = TRUE, table = TRUE) |>
hc_caption(text = 'Elaborated: Byron Raúl Avilés Rodríguez') |>
hc_add_theme(hc_theme_smpl())
hchart(minoristas2.datos, "column", hcaes(SERVICIO, tarifas, group = operadora)) |>
hc_credits(enable = TRUE, text = 'https://github.com/raulavilesrodriguez') |>
hc_tooltip(sort = TRUE, table = TRUE) |>
hc_caption(text = 'Elaborated: Byron Raúl Avilés Rodríguez') |>
hc_add_theme(hc_theme_alone())
hchart(minoristas2, "column", hcaes(SERVICIO, tarifas, group = operadora)) |>
hc_credits(enable = TRUE, text = 'https://github.com/raulavilesrodriguez') |>
hc_tooltip(sort = TRUE, table = TRUE) |>
hc_caption(text = 'Elaborated: Byron Raúl Avilés Rodríguez') |>
hc_add_theme(hc_theme_alone())
quarto::quarto_render()
locales <- read_excel("./data/tarifas_locales.xlsx")
locales <- locales |> mutate(`Average Datos (USD/MB)` = round(`Average Datos (USD/MB)`, 5),
`Average Voz (USD/min)` = round(`Average Voz (USD/min)`, 5),
`Average SMS (USD/mensaje)` = round(`Average SMS (USD/mensaje)`, 5)
)
locales
View(locales)
source("C:/Users/bravi/projects/webRoamingChile/roaming/codigo.R", echo=TRUE)
locales2 <- pivot_longer(locales, cols=2:4, names_to = 'indicador', values_to = 'tarifas')
View(locales2)
locales <- read_excel("./data/tarifas_locales.xlsx")
locales <- locales |> mutate(`Average Datos (USD/MB)` = round(`Average Datos (USD/MB)`, 5),
`Average Voz (USD/min)` = round(`Average Voz (USD/min)`, 5),
`Average SMS (USD/mensaje)` = round(`Average SMS (USD/mensaje)`, 5)
)
DT::datatable(locales)
locales2 <- pivot_longer(locales, cols=2:4, names_to = 'indicador', values_to = 'tarifas')
hchart(locales2, "column", hcaes(Operadora, tarifas, group = indicador)) |>
hc_title(text="<b>Tarifas Minoristas a nivel local Ecuador</b>") |>
hc_subtitle(text = 'País: Ecuador') |>
hc_credits(enable = TRUE, text = 'https://github.com/raulavilesrodriguez') |>
hc_tooltip(sort = TRUE, table = TRUE) |>
hc_caption(text = 'Elaborado: Byron Raúl Avilés Rodríguez') |>
hc_add_theme(hc_theme_alone())
quarto::quarto_render()
library(readxl)
library(tidyverse)
library(highcharter) #Interactive Plot
library(DT)
#___Usuarios___
usuarios.claro <- read_excel("./data/usuarios_claro.xlsx")
avClaro.outbound <- mean(usuarios.claro$usuarios_outbound)
avClaro.intbound <- mean(usuarios.claro$usuarios_inbound)
n <- nrow(usuarios.claro)
variation.claro.outbound <- ((usuarios.claro[['usuarios_outbound']][n] / usuarios.claro[['usuarios_outbound']][1]) - 1)*100
variation.claro.inbound <- ((usuarios.claro[['usuarios_inbound']][n] / usuarios.claro[['usuarios_inbound']][1]) - 1)*100
tail(usuarios.claro)
usuarios.claro2 <- pivot_longer(usuarios.claro, cols=2:3, names_to = 'tipo', values_to = 'usuarios')
usuarios.claro2$fecha <- as.Date(usuarios.claro2$fecha)
hchart(usuarios.claro2, "line", hcaes(x = fecha, y = usuarios, group = tipo)) |>
hc_title(text="<b>Usuarios Claro Roaming Chile-Ecuador</b>") |>
hc_subtitle(text = 'Country: Ecuador') |>
hc_credits(enable = TRUE, text = 'https://github.com/raulavilesrodriguez') |>
hc_tooltip(sort = TRUE, table = TRUE) |>
hc_caption(text = 'Elaborated: Byron Raúl Avilés Rodríguez') |>
hc_add_theme(hc_theme_darkunica())
usuarios.movi <- read_excel("./data/usuarios_movi.xlsx")
avMovi.outbound <- mean(usuarios.movi$usuarios)
variation.movi.outbound <- ((usuarios.movi[['usuarios']][n] / usuarios.movi[['usuarios']][1]) - 1)*100
usuarios.movi$Fecha <- as.Date(usuarios.movi$Fecha)
hchart(usuarios.movi, "line", hcaes(x = Fecha, y = usuarios)) |>
hc_title(text="<b>Usuarios Movistar Roaming Chile-Ecuador</b>") |>
hc_subtitle(text = 'Country: Ecuador') |>
hc_credits(enable = TRUE, text = 'https://github.com/raulavilesrodriguez') |>
hc_tooltip(sort = TRUE, table = TRUE) |>
hc_caption(text = 'Elaborated: Byron Raúl Avilés Rodríguez') |>
hc_add_theme(hc_theme_darkunica())
iot.claro.inbound <- read_excel("./data/iot_claro_inbound.xlsx")
iot.claro.inbound
#---TRÁFICO---
trafico.claro <- read_excel("./data/trafico_claro.xlsx")
voz.claro <- trafico.claro |> select(Fecha, `VOZ TOTAL TRAFICO Outbound`, `VOZ TOTAL TRAFICO Inbound`)
#---IoT Movi---
iot.movi <- read_excel("./data/iot_movi.xlsx")
iot.movi <- iot.movi[,-5]
#----Minorista----
minoristas <- read_excel("./data/tarifas_minoristas.xlsx")
minoristas <- minoristas |> mutate(Claro = round(Claro, 5), Movistar = round(Movistar, 5))
minoristas2 <- pivot_longer(minoristas, cols=2:4, names_to = 'operadora', values_to = 'tarifas')
hchart(minoristas2, "column", hcaes(SERVICIO, tarifas, group = operadora)) |>
hc_title(text="<b>Tarifas Minoristas Servicio Roaming Chile-Ecuador</b>") |>
hc_subtitle(text = 'Country: Ecuador') |>
hc_credits(enable = TRUE, text = 'https://github.com/raulavilesrodriguez') |>
hc_tooltip(sort = TRUE, table = TRUE) |>
hc_caption(text = 'Elaborated: Byron Raúl Avilés Rodríguez') |>
hc_add_theme(hc_theme_alone())
minoristas2.datos <- minoristas2 |> filter(SERVICIO == 'DATOS (USD/MB)')
hchart(minoristas2.datos, "column", hcaes(SERVICIO, tarifas, group = operadora)) |>
hc_title(text="<b>Tarifas Minoristas Servicio de Datos Roaming Chile-Ecuador</b>") |>
hc_subtitle(text = 'Country: Ecuador') |>
hc_credits(enable = TRUE, text = 'https://github.com/raulavilesrodriguez') |>
hc_tooltip(sort = TRUE, table = TRUE) |>
hc_caption(text = 'Elaborated: Byron Raúl Avilés Rodríguez') |>
hc_add_theme(hc_theme_alone())
locales <- read_excel("./data/tarifas_locales.xlsx")
locales <- read_excel("./data/tarifas_locales.xlsx")
locales <- read_excel("./data/tarifas_locales.xlsx")
View(locales)
locales <- locales |> mutate(`Average Datos (USD/MB)` = round(`Average Datos (USD/MB)`, 5),
`Average Voz (USD/min)` = round(`Average Voz (USD/min)`, 5),
`Average SMS (USD/mensaje)` = round(`Average SMS (USD/mensaje)`, 5)
)
DT::datatable(locales)
locales2 <- pivot_longer(locales, cols=2:4, names_to = 'indicador', values_to = 'tarifas')
hchart(locales2, "column", hcaes(Operadora, tarifas, group = indicador)) |>
hc_title(text="<b>Tarifas Minoristas a nivel local Ecuador</b>") |>
hc_subtitle(text = 'País: Ecuador') |>
hc_credits(enable = TRUE, text = 'https://github.com/raulavilesrodriguez') |>
hc_tooltip(sort = TRUE, table = TRUE) |>
hc_caption(text = 'Elaborado: Byron Raúl Avilés Rodríguez') |>
hc_add_theme(hc_theme_alone())
quarto::quarto_render()
quarto::quarto_preview()
topes <- read_excel("./data/tarifas_topes.xlsx")
View(topes)
class(topes$`Tarifas Tope Voz Entrante (USD/min)`)
topes <- read_excel("./data/tarifas_topes.xlsx")
topes <- data.frame(lapply(topes, function(x){
ifelse(is.numeric(x), round(x, 3), x)
}))
topes <- read_excel("./data/tarifas_topes.xlsx")
data.frame(lapply(topes, function(x){
ifelse(is.numeric(x), round(x, 3), x)
}))
lapply(topes, function(x){
ifelse(is.numeric(x), round(x, 3), x)
})
lapply(topes[3,], function(x){
ifelse(is.numeric(x), round(x, 3), x)
})
data.frame(apply(topes, 2, function(x){
ifelse(is.numeric(x), round(x, 3), x)
}))
topes <- data.frame(apply(topes, 2, function(x){
ifelse(is.numeric(x), round(x, 3), x)
}))
topes <- read_excel("./data/tarifas_topes.xlsx")
topes <- data.frame(apply(topes, 1, function(x){
ifelse(is.numeric(x), round(x, 3), x)
}))
topes <- read_excel("./data/tarifas_topes.xlsx")
topes <- data.frame(apply(topes, function(x){
ifelse(is.numeric(x), round(x, 3), x)
}))
topes <- data.frame(sapply(topes, function(x){
ifelse(is.numeric(x), round(x, 3), x)
}))
topes <- read_excel("./data/tarifas_topes.xlsx")
for (i in 2:5) {
topes[,i] <- lapply(topes[,i], function(x){
ifelse(is.numeric(x), round(x, 3), x)
})
}
topes <- read_excel("./data/tarifas_topes.xlsx")
lapply(topes[,2], function(x){
ifelse(is.numeric(x), round(x, 3), x)
})
sapply(topes[,2], function(x){
ifelse(is.numeric(x), round(x, 3), x)
})
topes[,2]
apply(topes[,2], 2, function(x){
ifelse(is.numeric(x), round(x, 3), x)
})
topes[,2]
sapply(list(topes[,2]), function(x){
ifelse(is.numeric(x), round(x, 3), x)
})
sapply(topes$`Tarifas Tope Datos (USD/MB)`, function(x){
ifelse(is.numeric(x), round(x, 3), x)
})
topes <- read_excel("./data/tarifas_topes.xlsx")
sapply(topes$`Tarifas Tope Datos (USD/MB)`, function(x){
ifelse(is.numeric(x), round(x, 3), x)
})
lapply(topes$`Tarifas Tope Datos (USD/MB)`, function(x){
ifelse(is.numeric(x), round(x, 3), x)
})
class(topes$`Tarifas Tope Datos (USD/MB)`[3])
topes[3,2]
as.numeric(topes$`Tarifas Tope Datos (USD/MB)`)
as.numeric(topes)
topes[2,5]
topes <- read_excel("./data/tarifas_topes.xlsx")
library(stringr) # to regex
str_extract_all(topes[2,5], regex("[:digit:]"), simplify = TRUE)
as.numeric(topes[2,5])
str_detect(topes[2,5], regex("[:digit:]"), simplify = TRUE)
str_detect(topes[2,5], regex("[:digit:]"))
lapply(topes[,2], function(x){
ifelse(str_detect(x, regex("[:digit:]")), round(x, 3), x)
})
lapply(topes[,2], function(x){
ifelse(str_detect(x, regex("[:digit:]")), round(as.numeric(x), 3), x)
})
tibble(lapply(topes[,2], function(x){
ifelse(str_detect(x, regex("[:digit:]")), round(as.numeric(x), 3), x)
}))
tibble(lapply(topes[,2], function(x){
ifelse(str_detect(x, regex("[:digit:]")), 'hola', x)
}))
tibble(lapply(topes[2,5], function(x){
ifelse(str_detect(x, regex("[:digit:]")), 'hola', x)
}))
tibble(lapply(topes[2,5], function(x){
ifelse(str_detect(x, regex("[:digit:]")), round(as.numeric(x),3), x)
}))
tibble(lapply(topes[,5], function(x){
x
}))
lapply(topes[,5], function(x){
x
})
lapply(topes[,5], function(x){
ifelse(str_detect(x, regex("[:digit:]")), 'hola', x)
})
lapply(topes[,5], function(x){
ifelse(str_detect(x, regex("[:digit:]")), round(as.numeric(x), 3), x)
})
str_detect(topes[2,5], regex("[:digit:]"))
str_detect(topes[2,5], regex("[:digit:]"), round(as.numeric(topes[2,5]),5))
lapply(topes[,5], function(x){
ifelse(str_detect(x, regex("[:digit:]")), round(as.numeric(x), 6), x)
})
lapply(topes[,5], function(x){
ifelse(str_detect(x, regex("[:digit:]")), round(as.numeric(x), 5), x)
})
ifelse(str_detect(topes[2,5], regex("[:digit:]")), round(as.numeric(topes[2,5]), 3), topes[2,5])
ifelse(str_detect(topes[2,5], regex("[:digit:]")), round(as.numeric(topes[2,5]), 5), topes[2,5])
ifelse(str_detect(topes[2,5], regex("[:digit:]")), round(as.numeric(topes[2,5]), 6), topes[2,5])
ifelse(str_detect(topes[3,5], regex("[:digit:]")), round(as.numeric(topes[3,5]), 4), topes[3,5])
lapply(topes[,i], function(x){
ifelse(str_detect(x, regex("[:digit:]")), round(x, 4), x)
})
lapply(topes[,i], function(x){
ifelse(str_detect(x, regex("[:digit:]")), round(as.numeric(x), 4), x)
})
topes[,2]
topes[,5]
class(topes[,5])
topes <- read_excel("./data/tarifas_topes.xlsx")
for (i in 2:5) {
topes[,i] <- tibble(lapply(topes[,i], function(x){
ifelse(str_detect(x, regex("[:digit:]")), round(x, 4), x)
}))
}
topes <- read_excel("./data/tarifas_topes.xlsx")
for (i in 2:5) {
topes[,i] <- tibble(lapply(topes[,i], function(x){
ifelse(str_detect(x, regex("[:digit:]")), round(as.numeric(x), 4), x)
}))
}
topes <- read_excel("./data/tarifas_topes.xlsx")
for (i in 1:5) {
topes[,i] <- tibble(lapply(topes[,i], function(x){
ifelse(str_detect(x, regex("[:digit:]")), round(as.numeric(x), 4), x)
}))
}
topes <- read_excel("./data/tarifas_topes.xlsx")
for (i in 1:5) {
topes[,i] <- (lapply(topes[,i], function(x){
ifelse(str_detect(x, regex("[:digit:]")), round(as.numeric(x), 4), x)
}))
}
